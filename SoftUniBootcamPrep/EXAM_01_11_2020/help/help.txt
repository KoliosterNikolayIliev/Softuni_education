D:\Corey_MSchafer\NI_BLOG\venv\Scripts\python.exe "C:\Program Files\JetBrains\PyCharm 2020.2.1\plugins\python\helpers\pydev\pydevconsole.py" --mode=client --port=57733
import sys; print('Python %s on %s' % (sys.version, sys.platform))
import django; print('Django %s' % django.get_version())
sys.path.extend(['D:\\Corey_MSchafer\\NI_BLOG', 'C:\\Program Files\\JetBrains\\PyCharm 2020.2.1\\plugins\\python\\helpers\\pycharm', 'C:\\Program Files\\JetBrains\\PyCharm 2020.2.1\\plugins\\python\\helpers\\pydev'])
if 'setup' in dir(django): django.setup()
import django_manage_shell; django_manage_shell.run("D:/Corey_MSchafer/NI_BLOG")
PyDev console: starting.
Python 3.8.5 (tags/v3.8.5:580fbb0, Jul 20 2020, 15:43:08) [MSC v.1926 32 bit (Intel)] on win32
Django 3.1.2
from blog.models import Post
from django.contrib.auth.models import User
User.objects.all
<bound method BaseManager.all of <django.contrib.auth.models.UserManager object at 0x0586DB08>>
User.objects.all()
<QuerySet [<User: Test_user>, <User: ni>]>
User.objects.first
<bound method BaseManager._get_queryset_methods.<locals>.create_method.<locals>.manager_method of <django.contrib.auth.models.UserManager object at 0x0586DB08>>
User.objects.first()
<User: ni>
User.objects.last()
<User: Test_user>
User.objects.filter(username='ni')
<QuerySet [<User: ni>]>
User.objects.filter(username='ni').first()
<User: ni>
user = User.objects.filter(username='ni').first()
user
<User: ni>
user.id
1
user.pk
1
user = User.objects.get(id=1)
user
<User: ni>
user = User.objects.get(name=ni)
Traceback (most recent call last):
  File "<input>", line 1, in <module>
NameError: name 'ni' is not defined
user = User.objects.get(name='ni')
Traceback (most recent call last):
  File "<input>", line 1, in <module>
  File "D:\Corey_MSchafer\NI_BLOG\venv\lib\site-packages\django\db\models\manager.py", line 85, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "D:\Corey_MSchafer\NI_BLOG\venv\lib\site-packages\django\db\models\query.py", line 418, in get
    clone = self._chain() if self.query.combinator else self.filter(*args, **kwargs)
  File "D:\Corey_MSchafer\NI_BLOG\venv\lib\site-packages\django\db\models\query.py", line 942, in filter
    return self._filter_or_exclude(False, *args, **kwargs)
  File "D:\Corey_MSchafer\NI_BLOG\venv\lib\site-packages\django\db\models\query.py", line 962, in _filter_or_exclude
    clone._filter_or_exclude_inplace(negate, *args, **kwargs)
  File "D:\Corey_MSchafer\NI_BLOG\venv\lib\site-packages\django\db\models\query.py", line 969, in _filter_or_exclude_inplace
    self._query.add_q(Q(*args, **kwargs))
  File "D:\Corey_MSchafer\NI_BLOG\venv\lib\site-packages\django\db\models\sql\query.py", line 1358, in add_q
    clause, _ = self._add_q(q_object, self.used_aliases)
  File "D:\Corey_MSchafer\NI_BLOG\venv\lib\site-packages\django\db\models\sql\query.py", line 1377, in _add_q
    child_clause, needed_inner = self.build_filter(
  File "D:\Corey_MSchafer\NI_BLOG\venv\lib\site-packages\django\db\models\sql\query.py", line 1258, in build_filter
    lookups, parts, reffed_expression = self.solve_lookup_type(arg)
  File "D:\Corey_MSchafer\NI_BLOG\venv\lib\site-packages\django\db\models\sql\query.py", line 1084, in solve_lookup_type
    _, field, _, lookup_parts = self.names_to_path(lookup_splitted, self.get_meta())
  File "D:\Corey_MSchafer\NI_BLOG\venv\lib\site-packages\django\db\models\sql\query.py", line 1481, in names_to_path
    raise FieldError("Cannot resolve keyword '%s' into field. "
django.core.exceptions.FieldError: Cannot resolve keyword 'name' into field. Choices are: date_joined, email, first_name, groups, id, is_active, is_staff, is_superuser, last_login, last_name, logentry, password, post, user_permissions, username
user = User.objects.get(id=2)
user
<User: Test_user>
Post.objects.all()
<QuerySet [<Post: Kur>]>
post_2=Post(title = 'Blog1', content = 'KURKRURURU', author = user)
post_2.save()
Post.objects.all()
<QuerySet [<Post: Kur>, <Post: Blog1>]>
user = User.objects.get(username='ni')
post_3=Post(title = 'Blog5', content = 'KURKRURURU222222222222', author = user)
post_3.save()
post.content
Traceback (most recent call last):
  File "<input>", line 1, in <module>
NameError: name 'post' is not defined
post_3.content
'KURKRURURU222222222222'
post_3.date_posted
datetime.datetime(2020, 10, 26, 22, 7, 31, 360542, tzinfo=<UTC>)
post_3.author
<User: ni>
post_3.author.email
''
post_2.author.email
'Testuser@company.com'
user.post_set
<django.db.models.fields.related_descriptors.create_reverse_many_to_one_manager.<locals>.RelatedManager object at 0x01925B08>
post_2.user_set
Traceback (most recent call last):
  File "<input>", line 1, in <module>
AttributeError: 'Post' object has no attribute 'user_set'
post2
Traceback (most recent call last):
  File "<input>", line 1, in <module>
NameError: name 'post2' is not defined
post = Post.title
post.user_set
Traceback (most recent call last):
  File "<input>", line 1, in <module>
AttributeError: 'DeferredAttribute' object has no attribute 'user_set'
Post.user_set
Traceback (most recent call last):
  File "<input>", line 1, in <module>
AttributeError: type object 'Post' has no attribute 'user_set'
user.post_set
<django.db.models.fields.related_descriptors.create_reverse_many_to_one_manager.<locals>.RelatedManager object at 0x01925298>
[x for x in user.post_set]
Traceback (most recent call last):
  File "<input>", line 1, in <module>
TypeError: 'RelatedManager' object is not iterable
user.post_set.all()
<QuerySet [<Post: Blog5>]>
user.post_set.create(title = 'bbbb', content = 'kkkk')
<Post: bbbb>
post_4 = user.post_set.create(title = 'bbbb', content = 'kkkk')
post_4.save()
user.post_set.all()
<QuerySet [<Post: Blog5>, <Post: bbbb>, <Post: bbbb>]>
user.post_set.create(title = 'ttt', content = 'kkkk')
<Post: ttt>
user.post_set.all()
<QuerySet [<Post: Blog5>, <Post: bbbb>, <Post: bbbb>, <Post: ttt>]>